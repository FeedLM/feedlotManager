/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.Animal;
import static domain.Excel.leerArchivoSesion;
import static domain.Excel.leerArchivoSesionCSV;
import domain.ParametrosSP;
import domain.RegistroSesion;
import static gui.EspecificacionesAnimal.animalDetalle;
import static gui.Desktop.manejadorBD;
import static gui.Desktop.rancho;
import static gui.Splash.formatoDateTime;
import static gui.Login.gs_mensaje;
import java.awt.Image;
import java.awt.Toolkit;
import static java.lang.System.exit;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author sperez
 */
public class CargarArchivoSesion extends javax.swing.JFrame {

    /**
     * Creates new form CargarArchivoSesion
     *
     * @param parent
     */
    public CargarArchivoSesion(Desktop parent) {
        initComponents();

//        parent = aParent;
        this.setTitle(this.getTitle() + " " + rancho.descripcion);

        Image i = null;
        i = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/logo tru-test.png"));
        setIconImage(i);

        setLocationRelativeTo(null);

        this.Bar.setVisible(false);
        
        fondo1.cargar(this.getSize());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tf_archivo = new abstractt.TextField();
        Bar = new javax.swing.JProgressBar();
        etiqueta1 = new abstractt.Etiqueta();
        btn_cargar = new abstractt.Boton();
        btn_examinar = new abstractt.Boton();
        fondo1 = new abstractt.fondo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(tf_archivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 350, 20));
        jPanel1.add(Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 400, 20));

        etiqueta1.setBackground(new java.awt.Color(95, 84, 88));
        etiqueta1.setForeground(new java.awt.Color(230, 225, 195));
        etiqueta1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiqueta1.setText("Cargar Archivo de Sesión");
        etiqueta1.setFont(new java.awt.Font("Trebuchet", 1, 24)); // NOI18N
        etiqueta1.setOpaque(true);
        jPanel1.add(etiqueta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 425, 50));

        btn_cargar.setText("Cargar Sesión");
        btn_cargar.setFont(new java.awt.Font("Trebuchet", 1, 12)); // NOI18N
        btn_cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cargarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 150, 30));

        btn_examinar.setText("Examinar");
        btn_examinar.setFont(new java.awt.Font("Trebuchet", 1, 12)); // NOI18N
        btn_examinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_examinarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_examinar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 150, 30));

        fondo1.setText("fondo1");
        jPanel1.add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 225));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

        if (especificacionesAnimal != null) {
            if (!especificacionesAnimal.isVisible()) {

                cargar();
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void btn_cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cargarActionPerformed
        leerArchivoCSV();
    }//GEN-LAST:event_btn_cargarActionPerformed

    private void btn_examinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_examinarActionPerformed
        buscarArchivo();
    }//GEN-LAST:event_btn_examinarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    public void leerArchivoCSV() {
        String archivo;
        archivo = tf_archivo.getText();

        regSesionCargados = new ArrayList<RegistroSesion>();

        regSesion = leerArchivoSesionCSV(archivo);

        Bar.setMaximum(regSesion.size());
        contBar = 0;
        Bar.setValue(contBar);
        Bar.setVisible(true);

        cargar();
    }

    private Integer contBar;

    List<RegistroSesion> regSesion;
    List<RegistroSesion> regSesionCargados;
    Date fecha;

    public Integer diferenciaSegundos() {
        Date fecha_actual = new Date();

        if (fecha == null) {
            return 100;
        }

        System.out.println("fecha apertura:" + fecha.getSeconds());
        System.out.println("fecha actual  :" + fecha_actual.getSeconds());

        return fecha.getSeconds() - fecha_actual.getSeconds();
    }

    public void cargar() {

        Animal animal;
        boolean mensajeFinal = true;

        if (especificacionesAnimal != null) {
            if (especificacionesAnimal.isVisible()) {

                return;
            }
        }

        if (regSesion == null) {

            return;
        }

        if (regSesion.size() == regSesionCargados.size()) {

            mensajeFinal = false;
        }

        for (RegistroSesion us : regSesion) {

            if (regSesionCargados.contains(us)) {

                continue;
            }

            contBar++;

            regSesionCargados.add(us);

            animal = new Animal();

            if (!us.arete_visual.equals("")) {

                animal.cargarPorAreteVisual(us.arete_visual, "A");
            }

            if (animal.id_animal.equals("")) {

                System.out.println("No existe visual " + us.arete_visual + " cargar por electronico " + us.arete_electronico);

                if (!us.arete_electronico.equals("")) {
                    animal.cargarPorEid(us.arete_electronico);
                }
            }
            System.out.println("Animal Id: " + animal.id_animal);
            /*
             * Animal Nuevo
             * Abre Kardex
             * Para Registro
             **/
            if (animal.id_animal.equals("")) {

                System.out.println("nuevo animal");

                //regSesion.remove(us);
                fecha = new Date();

                especificacionesAnimal = new EspecificacionesAnimal(parent);

                if (!us.arete_electronico.equals("")) {

                    especificacionesAnimal.setEid(us.arete_electronico);
                } else {

                    especificacionesAnimal.setAretevisual(us.arete_visual);
                }

                especificacionesAnimal.setPeso(us.peso);
                especificacionesAnimal.setFechaRegCsv(us.fecha);

                if (especificacionesAnimal.nuevo) {

                    especificacionesAnimal.setVisible(true);
                }
                /*
                 try {

                 sleep(1000);
                 } catch (InterruptedException ex) {

                 Logger.getLogger(CargarArchivoSesion.class.getName()).log(Level.SEVERE, null, ex);
                 }
                 */
                animal = null;
                Bar.setValue(contBar);
                break;
            } else {

                System.out.println("agregar peso");
                /*
                 *Animal Existente 
                 * Mete Registro de Peso
                 */
                manejadorBD.parametrosSP = new ParametrosSP();
                us.fecha.setSeconds(0);

                manejadorBD.parametrosSP.agregarParametro(rancho.id_rancho, "varIdRancho", "STRING", "IN");
                manejadorBD.parametrosSP.agregarParametro(animal.id_animal, "varIdAnimal", "STRING", "IN");
                manejadorBD.parametrosSP.agregarParametro(formatoDateTime.format(us.fecha), "varFecha", "STRING", "IN");
                manejadorBD.parametrosSP.agregarParametro(us.peso.toString(), "varPeso", "DOUBLE", "IN");

                if (manejadorBD.ejecutarSP("{ call movimientoPeso(?,?,?,?) }") == 0) {

                    // JOptionPane.showMessageDialog(this, "Se agrego el peso Correctamente", gs_mensaje, JOptionPane.INFORMATION_MESSAGE);
                } else {

                    JOptionPane.showMessageDialog(this, "Error al agregar el peso del animal\n" + manejadorBD.errorSQL, gs_mensaje, JOptionPane.ERROR_MESSAGE);
                }
                animal = null;
                Bar.setValue(contBar);
                System.out.println("Registrar peso de " + us.toString());
            }

            System.out.println(us.toString());
        }

        if (mensajeFinal && contBar == regSesion.size()) {

            //    JOptionPane.showMessageDialog(this, "Se Cargo el Archivo de Sesion Correctamente", gs_mensaje, JOptionPane.INFORMATION_MESSAGE);
            Bar.setVisible(false);
        }
    }

    public void buscarArchivo() {

        String archivo;

        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Archivos CSV, XLS y XLSX", "csv", "xls", "xlsx");
        chooser.setFileFilter(filter);

        int returnVal = chooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            archivo = chooser.getSelectedFile().getAbsoluteFile().toString();

            tf_archivo.setText(archivo);
        }
    }

    Desktop parent;
    public EspecificacionesAnimal especificacionesAnimal;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Bar;
    private abstractt.Boton btn_cargar;
    private abstractt.Boton btn_examinar;
    private abstractt.Etiqueta etiqueta1;
    private abstractt.fondo fondo1;
    private javax.swing.JPanel jPanel1;
    private abstractt.TextField tf_archivo;
    // End of variables declaration//GEN-END:variables
}
