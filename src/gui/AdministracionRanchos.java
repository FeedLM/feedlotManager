package gui;

import domain.Ciudad;
import domain.Estado;
import domain.ParametrosSP;
import domain.Rancho;
import static domain.Seguridad.pideContraseÃ±a;
import static gui.Desktop.manejadorBD;
import static gui.Desktop.rancho;
import static gui.Login.gs_mensaje;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

public class AdministracionRanchos extends javax.swing.JFrame {

    public AdministracionRanchos(java.awt.Frame parent) {
        initComponents();
        this.parent = parent;
        setLocationRelativeTo(null);
        Image i = null;
        i = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/logo tru-test.png"));
        setIconImage(i);
        ListSelectionModel lsm = this.t_ranchos.getSelectionModel();
        lsm.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                seleccionaRancho();
            }
        });

        cargarRanchos();
        rancho = new Rancho();
        estado = new Estado();
        ciudad = new Ciudad();

        estadoSelector1.cargar();

        cargarComponentes();
    }

    private void limpiar() {

        tf_Nombre.setText("");
        jta_Actividad.setText("");
        estadoSelector1.setSelectedItem("");

        rancho = new Rancho();

    }
    private boolean selectRancho;

    private void seleccionaRancho() {

        Integer fila = t_ranchos.getSelectedRow();

        //  validacionCodigo = true;
        if (fila >= 0) {

            // selectRancho = true;
            rancho.id_rancho = t_ranchos.getValueAt(fila, 0).toString();
            rancho.cargarPorId(rancho.id_rancho);
            this.tf_Nombre.setText(rancho.descripcion);
            this.jta_Actividad.setText(rancho.actividad);

            estado.cargarPorDescripcion(rancho.estado.descripcion);

            this.estadoSelector1.setSelectedItem(estado.descripcion);
            this.ciudadSelector1.cargar(estado);

            ciudad.cargarPorDescripcion(rancho.ciudad.descripcion);

            this.ciudadSelector1.setSelectedItem(ciudad.descripcion);
            // selectRancho = false;
        }
    }

    private void cargarRanchos() {

        rancho.leerRanchos(t_ranchos);
    }
    private String actividad;
    private String nombre;
    private Estado estado;
    private Ciudad ciudad;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_ranchos = new abstractt.Table();
        jPanel3 = new javax.swing.JPanel();
        btn_nuevo = new abstractt.Boton();
        btn_guardar = new abstractt.Boton();
        btn_eliminar = new abstractt.Boton();
        jPanel4 = new javax.swing.JPanel();
        etq_ciudad = new javax.swing.JLabel();
        etq_nombre = new javax.swing.JLabel();
        etq_actividad = new javax.swing.JLabel();
        etq_Estado = new javax.swing.JLabel();
        tf_Nombre = new abstractt.TextField();
        jta_Actividad = new javax.swing.JTextArea();
        estadoSelector1 = new domain.EstadoSelector();
        ciudadSelector1 = new domain.CiudadSelector();
        etiqueta1 = new abstractt.Etiqueta();
        fondo1 = new abstractt.fondo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administracion de Fincas/Ranchos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        t_ranchos.setForeground(new java.awt.Color(230, 225, 195));
        t_ranchos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_ranchos.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        t_ranchos.setGridColor(new java.awt.Color(230, 225, 195));
        jScrollPane2.setViewportView(t_ranchos);
        if (t_ranchos.getColumnModel().getColumnCount() > 0) {
            t_ranchos.getColumnModel().getColumn(0).setResizable(false);
            t_ranchos.getColumnModel().getColumn(1).setResizable(false);
            t_ranchos.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 650, 268));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_nuevo.setText("N u e v o");
        btn_nuevo.setToolTipText("Limpia los campos para dar de alta un nuevo Rancho");
        btn_nuevo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });
        jPanel3.add(btn_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        btn_guardar.setText("G u a r d a r ");
        btn_guardar.setToolTipText("Guarda los datos para crear un Rancho");
        btn_guardar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 0, 150, 30));

        btn_eliminar.setText("E l i m i n a r");
        btn_eliminar.setToolTipText("Elimina el Rancho seleccionado");
        btn_eliminar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 150, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 550, 640, 60));

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etq_ciudad.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        etq_ciudad.setForeground(new java.awt.Color(95, 84, 88));
        etq_ciudad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etq_ciudad.setText("Ciudad:");
        jPanel4.add(etq_ciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 80, 22));

        etq_nombre.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        etq_nombre.setForeground(new java.awt.Color(95, 84, 88));
        etq_nombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etq_nombre.setText("Nombre:");
        jPanel4.add(etq_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 80, 22));

        etq_actividad.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        etq_actividad.setForeground(new java.awt.Color(95, 84, 88));
        etq_actividad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etq_actividad.setText("Actividad:");
        jPanel4.add(etq_actividad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 80, 60));

        etq_Estado.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        etq_Estado.setForeground(new java.awt.Color(95, 84, 88));
        etq_Estado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etq_Estado.setText("Estado:");
        jPanel4.add(etq_Estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 80, 22));

        tf_Nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_NombreActionPerformed(evt);
            }
        });
        jPanel4.add(tf_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 300, -1));

        jta_Actividad.setColumns(20);
        jta_Actividad.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jta_Actividad.setLineWrap(true);
        jta_Actividad.setRows(3);
        jta_Actividad.setToolTipText("");
        jta_Actividad.setWrapStyleWord(true);
        jta_Actividad.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.add(jta_Actividad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 300, 60));

        estadoSelector1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoSelector1ActionPerformed(evt);
            }
        });
        jPanel4.add(estadoSelector1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 300, -1));
        jPanel4.add(ciudadSelector1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 300, -1));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 0, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        etiqueta1.setBackground(new java.awt.Color(95, 84, 88));
        etiqueta1.setForeground(new java.awt.Color(230, 225, 195));
        etiqueta1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiqueta1.setText("N u e v a   F i n c a ");
        etiqueta1.setFont(new java.awt.Font("Trebuchet", 1, 48)); // NOI18N
        etiqueta1.setOpaque(true);
        jPanel1.add(etiqueta1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 80));

        fondo1.setText("fondo1");
        jPanel1.add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void tf_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_NombreActionPerformed

        nombre = tf_Nombre.getText();
    }//GEN-LAST:event_tf_NombreActionPerformed
    private void guardar() {
        if (rancho.id_rancho.equals("")) {
            agregar();
        } else {
            actualizar();
        }

        cargarRanchos();
    }

    private void actualizar() {

        rancho.descripcion = this.tf_Nombre.getText();
        actividad = this.jta_Actividad.getText();
        estado.cargarPorDescripcion(this.estadoSelector1.getSelectedItem().toString());
        ciudad.cargarPorDescripcion(this.ciudadSelector1.getSelectedItem().toString());

        manejadorBD.parametrosSP = new ParametrosSP();

        manejadorBD.parametrosSP.agregarParametro(rancho.id_rancho, "varIdRancho", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(rancho.descripcion, "varDescripcion", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(actividad, "varActividad", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(estado.id_estado, "varEstado", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(ciudad.id_ciudad, "varCiudad", "STRING", "IN");

        if (manejadorBD.ejecutarSP("{ call actualizarRancho(?,?,?,?,?) }") == 0) {

            JOptionPane.showMessageDialog(this, "Se Actualizo el Rancho Correctamente", gs_mensaje, JOptionPane.INFORMATION_MESSAGE);

        } else {

            JOptionPane.showMessageDialog(this, "Error al Actualizar el Rancho", gs_mensaje, JOptionPane.ERROR_MESSAGE);
        }
    }

    private void agregar() {

        nombre = tf_Nombre.getText();
        actividad = this.jta_Actividad.getText();
        estado.cargarPorDescripcion(this.estadoSelector1.getSelectedItem().toString());
        ciudad.cargarPorDescripcion(this.ciudadSelector1.getSelectedItem().toString());

        manejadorBD.parametrosSP = new ParametrosSP();
        manejadorBD.parametrosSP.agregarParametro(nombre, "varDescripcion", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(actividad, "varActividad", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(estado.id_estado, "varEstado", "STRING", "IN");
        manejadorBD.parametrosSP.agregarParametro(ciudad.id_ciudad, "varCiudad", "STRING", "IN");

        if (manejadorBD.ejecutarSP("{ call agregarRancho(?,?,?,?) }") == 0) {

            cargarRanchos();

            JOptionPane.showMessageDialog(this, "Se Agrego el Rancho Correctamente", gs_mensaje, JOptionPane.INFORMATION_MESSAGE);

        } else {

            JOptionPane.showMessageDialog(this, "Error al crear el Rancho\n" + manejadorBD.errorSQL, gs_mensaje, JOptionPane.ERROR_MESSAGE);
        }
    }

    private void estadoSelector1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoSelector1ActionPerformed

        //if (!selectRancho) {
        //Estado estado = new Estado();
        //String estado_desc = estadoSelector1.getSelectedItem().toString();
        estado.cargarPorDescripcion(estadoSelector1.getSelectedItem().toString());
        this.ciudadSelector1.cargar(estado);
        //}
    }//GEN-LAST:event_estadoSelector1ActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        limpiar();
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        guardar();
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed

        int opcion;

        opcion = JOptionPane.showConfirmDialog(this, "Â¿Desea Eliminar el Rancho?", gs_mensaje, JOptionPane.YES_NO_OPTION);

        if (opcion != 0) {

            return;
        }

        if (!pideContraseÃ±a()) {

            return;
        }

        manejadorBD.parametrosSP = new ParametrosSP();

        manejadorBD.parametrosSP.agregarParametro(rancho.id_rancho, "varIdRancho", "STRING", "IN");

        if (manejadorBD.ejecutarSP("{ call eliminarRancho(?) }") == 0) {

            JOptionPane.showMessageDialog(this, "Se Elimino el Rancho Correctamente", gs_mensaje, JOptionPane.INFORMATION_MESSAGE);
            cargarRanchos();
        } else {

            JOptionPane.showMessageDialog(this, "Error al Eliminar el Rancho\n" + manejadorBD.errorSQL, gs_mensaje, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        SeleccionarRancho seleccionarRancho = new SeleccionarRancho();
        seleccionarRancho.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    public SeleccionarRancho getSeleccionarRancho() {
        return seleccionarRancho;
    }

    public void setSeleccionarRancho(SeleccionarRancho seleccionarRancho) {
        this.seleccionarRancho = seleccionarRancho;
    }

    private void cargarComponentes() {
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension pantallaTamano = tk.getScreenSize();
//        setSize(pantallaTamano);
//        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setResizable(false);
//        plecaSuperior1.cargar();
        fondo1.cargar(pantallaTamano);
    }
    java.awt.Frame parent;
    private SeleccionarRancho seleccionarRancho;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private abstractt.Boton btn_eliminar;
    private abstractt.Boton btn_guardar;
    private abstractt.Boton btn_nuevo;
    private domain.CiudadSelector ciudadSelector1;
    private domain.EstadoSelector estadoSelector1;
    private abstractt.Etiqueta etiqueta1;
    private javax.swing.JLabel etq_Estado;
    private javax.swing.JLabel etq_actividad;
    private javax.swing.JLabel etq_ciudad;
    private javax.swing.JLabel etq_nombre;
    private abstractt.fondo fondo1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jta_Actividad;
    private abstractt.Table t_ranchos;
    private abstractt.TextField tf_Nombre;
    // End of variables declaration//GEN-END:variables
}
